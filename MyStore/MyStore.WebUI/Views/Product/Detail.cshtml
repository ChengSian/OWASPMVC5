@model MyStore.WebUI.Models.ProductDetailViewModel

<div class="well">
    @if (!string.IsNullOrWhiteSpace(Model.Product.ImagePath))
    {
        <div class="pull-left" style="margin-right:10px">
            <img class="img-thumbnail" width="75" height="75"
                 src="@Url.Content("~/Uploads/" + Model.Product.ImagePath)" />
        </div>
    }
    <h3>
        <strong>@Model.Product.Name</strong>
        <span class="pull-right label label-primary">@Model.Product.Price.ToString("c")</span>
    </h3>

    @if (User.Identity.IsAuthenticated)
    {
        using (Html.BeginForm("AddToCart", "Cart"))
        {
            <div class="pull-right">
                @Html.Hidden("ProductID", Model.Product.ProductID)
                @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                <input type="submit" class="btn btn-success" value="Add to cart" />
            </div>
        }
    }
    <span class="lead"> @Model.Product.Description</span>
</div>

@if (User.Identity.IsAuthenticated)
{
    if (Model.ProductVotes.Any(v => v.UserID == Model.CurrentUserId))
    {
        <p class="alert alert-success">You've already voted for the @Model.Product.Name</p>
    }
    else
    {

        <!-- Button trigger modal -->
        <button id="voteButton" type="button" class="btn btn-success" data-toggle="modal"
                data-target="#voteModal">
            Vote for the @Model.Product.Name
        </button>

        <!-- Modal -->
        <div class="modal fade" id="voteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">You've voting for the @Model.Product.Name</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>
                            Are you really sure you want to vote for the @Model.Product.Name?
                            You can't recall your vote if you change your mind!
                        </p>

                        @using (Html.BeginForm())
                        {
                            @*
                                //todo: Session-9.2 Cross Site Request Forgery Fix (API)
                            *@
                            @Html.AntiForgeryToken()
                            <div class="control-group">
                                <label class="control-label" for="comments">Comments</label>
                                <div class="controls">
                                    <textarea rows="2" id="comments"></textarea>
                                </div>
                            </div>

                        }
                        <div id="voteFailure" class="alert alert-error" style="display: none;">Uh oh, your vote couldn't be cast.</div>
                        <div class="progress progress-striped active" id="progressBar" style="display: none;">
                            <div class="progress-bar" role="progressbar" style="width: 100%;" aria-valuenow="95" aria-valuemin="0" aria-valuemax="100">95%</div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
                        <button class="btn btn-primary" id="confirmVoteButton"
                                data-user-id="@Model.CurrentUserId"
                                data-first-name="@ViewBag.FirstName"
                                data-last-name="@ViewBag.LastName"
                                data-product-id="@Model.Product.ProductID"
                                data-votes="@Model.ProductVotes.Count()"
                                data-total-votes="@ViewBag.TotalVotes">
                            Vote
                        </button>
                    </div>
                </div>
            </div>
        </div>


    }

}
<div class="row-fluid">
    Order By:
    <div class="btn-group" role="group">
        @Html.ActionLink("UserID", "Detail", new { @Model.Product.ProductID, orderBy = "UserID" }, new { @class = "btn btn-link" })
        @Html.ActionLink("Comments", "Detail", new { @Model.Product.ProductID, orderBy = "Comments" }, new { @class = "btn btn-link" })
    </div>
    <h3>Comments</h3>
    @if (!Model.ProductVotes.Where(v => !string.IsNullOrEmpty(v.Comments)).Any())
    {
        <p class="alert alert-info">There are currently no comments for the @Model.Product.Name</p>
    }
    <table id="results" class="table table-striped">
        <thead>
            <tr>
                <th>Voter</th>
                <th>Comment</th>
            </tr>
        </thead>
        <tbody>
            @{ var rank = 1;
                foreach (var vote in Model.ProductVotes.Where(v => !string.IsNullOrEmpty(v.Comments)))
                {
                    <tr>
                        <td>@Html.Raw(vote.UserName)</td>
                        <td>@Html.Raw(vote.Comments)</td>
                        @{
                            //todo: Session-8.2 Stored XSS Fix
                            @*<td>@vote.UserName</td>
                                <td>@vote.Comments</td>*@

                        }

                    </tr>
                    rank++;
                }
            }
        </tbody>
    </table>
</div>

