@model Attacker.MyStore.Models.BruteForcerViewModel

@{
    ViewBag.Title = "Password BruteForcer";
}


<div class="row">
    <div class="panel col-md-12">
        <div class="panel-heading">
            <h3>@ViewBag.Title</h3>
        </div>
        <div class="panel-body">
            <p class="lead">Please log in to access </p>
            @using (Html.BeginForm())
            {
                @Html.ValidationSummary()
                <div class="form-group">
                    <label>Email:</label>
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                </div>
                <input type="submit" value="Brute Force Password" class="btn btn-primary" />
            }
        </div>
    </div>
</div>
<div class="row">
    <div class="well well-lg">
        @if (!string.IsNullOrEmpty(ViewBag.BruteForcePasswordResult))
        {
            foreach (string line in ViewBag.BruteForcePasswordResult.Split(new[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries))
            {
                @line<br />
            }
        }

    </div>
</div>